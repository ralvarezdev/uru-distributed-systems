// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/tictactoe.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TicTacToeServer {
  public static partial class TicTacToe
  {
    static readonly string __ServiceName = "tictactoe.TicTacToe";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.StartGameRequest> __Marshaller_tictactoe_StartGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.StartGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.StartGameReply> __Marshaller_tictactoe_StartGameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.StartGameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.WaitForPlayerRequest> __Marshaller_tictactoe_WaitForPlayerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.WaitForPlayerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.WaitForPlayerReply> __Marshaller_tictactoe_WaitForPlayerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.WaitForPlayerReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.JoinGameRequest> __Marshaller_tictactoe_JoinGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.JoinGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.JoinGameReply> __Marshaller_tictactoe_JoinGameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.JoinGameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.MoveRequest> __Marshaller_tictactoe_MoveRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.MoveRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.MoveReply> __Marshaller_tictactoe_MoveReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.MoveReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.NotifyOpponentMoveRequest> __Marshaller_tictactoe_NotifyOpponentMoveRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.NotifyOpponentMoveRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TicTacToeServer.NotifyOpponentMoveReply> __Marshaller_tictactoe_NotifyOpponentMoveReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TicTacToeServer.NotifyOpponentMoveReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TicTacToeServer.StartGameRequest, global::TicTacToeServer.StartGameReply> __Method_StartGame = new grpc::Method<global::TicTacToeServer.StartGameRequest, global::TicTacToeServer.StartGameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartGame",
        __Marshaller_tictactoe_StartGameRequest,
        __Marshaller_tictactoe_StartGameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TicTacToeServer.WaitForPlayerRequest, global::TicTacToeServer.WaitForPlayerReply> __Method_WaitForPlayer = new grpc::Method<global::TicTacToeServer.WaitForPlayerRequest, global::TicTacToeServer.WaitForPlayerReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "WaitForPlayer",
        __Marshaller_tictactoe_WaitForPlayerRequest,
        __Marshaller_tictactoe_WaitForPlayerReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TicTacToeServer.JoinGameRequest, global::TicTacToeServer.JoinGameReply> __Method_JoinGame = new grpc::Method<global::TicTacToeServer.JoinGameRequest, global::TicTacToeServer.JoinGameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JoinGame",
        __Marshaller_tictactoe_JoinGameRequest,
        __Marshaller_tictactoe_JoinGameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TicTacToeServer.MoveRequest, global::TicTacToeServer.MoveReply> __Method_MakeMove = new grpc::Method<global::TicTacToeServer.MoveRequest, global::TicTacToeServer.MoveReply>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "MakeMove",
        __Marshaller_tictactoe_MoveRequest,
        __Marshaller_tictactoe_MoveReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TicTacToeServer.NotifyOpponentMoveRequest, global::TicTacToeServer.NotifyOpponentMoveReply> __Method_NotifyOpponentMove = new grpc::Method<global::TicTacToeServer.NotifyOpponentMoveRequest, global::TicTacToeServer.NotifyOpponentMoveReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NotifyOpponentMove",
        __Marshaller_tictactoe_NotifyOpponentMoveRequest,
        __Marshaller_tictactoe_NotifyOpponentMoveReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TicTacToeServer.TictactoeReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TicTacToe</summary>
    [grpc::BindServiceMethod(typeof(TicTacToe), "BindService")]
    public abstract partial class TicTacToeBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TicTacToeServer.StartGameReply> StartGame(global::TicTacToeServer.StartGameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task WaitForPlayer(global::TicTacToeServer.WaitForPlayerRequest request, grpc::IServerStreamWriter<global::TicTacToeServer.WaitForPlayerReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TicTacToeServer.JoinGameReply> JoinGame(global::TicTacToeServer.JoinGameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task MakeMove(grpc::IAsyncStreamReader<global::TicTacToeServer.MoveRequest> requestStream, grpc::IServerStreamWriter<global::TicTacToeServer.MoveReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task NotifyOpponentMove(global::TicTacToeServer.NotifyOpponentMoveRequest request, grpc::IServerStreamWriter<global::TicTacToeServer.NotifyOpponentMoveReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TicTacToeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StartGame, serviceImpl.StartGame)
          .AddMethod(__Method_WaitForPlayer, serviceImpl.WaitForPlayer)
          .AddMethod(__Method_JoinGame, serviceImpl.JoinGame)
          .AddMethod(__Method_MakeMove, serviceImpl.MakeMove)
          .AddMethod(__Method_NotifyOpponentMove, serviceImpl.NotifyOpponentMove).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TicTacToeBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_StartGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TicTacToeServer.StartGameRequest, global::TicTacToeServer.StartGameReply>(serviceImpl.StartGame));
      serviceBinder.AddMethod(__Method_WaitForPlayer, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::TicTacToeServer.WaitForPlayerRequest, global::TicTacToeServer.WaitForPlayerReply>(serviceImpl.WaitForPlayer));
      serviceBinder.AddMethod(__Method_JoinGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TicTacToeServer.JoinGameRequest, global::TicTacToeServer.JoinGameReply>(serviceImpl.JoinGame));
      serviceBinder.AddMethod(__Method_MakeMove, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::TicTacToeServer.MoveRequest, global::TicTacToeServer.MoveReply>(serviceImpl.MakeMove));
      serviceBinder.AddMethod(__Method_NotifyOpponentMove, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::TicTacToeServer.NotifyOpponentMoveRequest, global::TicTacToeServer.NotifyOpponentMoveReply>(serviceImpl.NotifyOpponentMove));
    }

  }
}
#endregion
